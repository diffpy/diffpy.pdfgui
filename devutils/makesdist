#!/usr/bin/env python

"""Create source distribution tar.gz archive, where each file belongs
to a root user and modification time is set to the git commit time.
"""

import glob
import gzip
import os
import subprocess
import sys
import tarfile

from setup import FALLBACK_VERSION, versiondata

BASEDIR = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
sys.path.insert(0, BASEDIR)

timestamp = versiondata.getint("DEFAULT", "timestamp")

vfb = versiondata.get("DEFAULT", "version").split(".post")[0] + ".post0"
emsg = "Invalid FALLBACK_VERSION. Expected %r got %r."
assert vfb == FALLBACK_VERSION, emsg % (vfb, FALLBACK_VERSION)


def inform(s):
    sys.stdout.write(s)
    sys.stdout.flush()
    return


inform('Run "setup.py sdist --formats=tar" ')
cmd_sdist = [sys.executable] + "setup.py sdist --formats=tar".split()
ec = subprocess.call(cmd_sdist, cwd=BASEDIR, stdout=open(os.devnull, "w"))
if ec:
    sys.exit(ec)
inform("[done]\n")

tarname = max(glob.glob(BASEDIR + "/dist/*.tar"), key=os.path.getmtime)

tfin = tarfile.open(tarname)
fpout = gzip.GzipFile(tarname + ".gz", "w", mtime=0)
tfout = tarfile.open(fileobj=fpout, mode="w")


def fixtarinfo(tinfo):
    tinfo.uid = tinfo.gid = 0
    tinfo.uname = tinfo.gname = "root"
    tinfo.mtime = timestamp
    tinfo.mode &= ~0o022
    return tinfo


inform("Filter %s --> %s.gz " % (2 * (os.path.basename(tarname),)))
for ti in tfin:
    tfout.addfile(fixtarinfo(ti), tfin.extractfile(ti))

tfin.close()
os.remove(tarname)
inform("[done]\n")
